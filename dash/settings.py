"""
Django settings for Dashboard project.

Generated by 'django-admin startproject' using Django 1.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import ldap
from django_auth_ldap.config import LDAPSearch,  GroupOfNamesType

ADMINS = (('Jason Kirby', 'jason.kirby@dash.com'),)

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
with open('/etc/db_secretkey.txt') as f:
    DB_PASSWORD = f.read().strip()
	
with open('/etc/secret_key.txt') as f:
    SECRET_KEY = f.read().strip()
	
with open('/etc/ad_key.txt') as f:
	LDAP_KEY = f.read().strip()
	
with open('/etc/zz_alfresco_key.txt') as f:
	ZZ_ALFRESCO_PASS = f.read().strip()

TEST_MODE = True

if TEST_MODE:
	DEBUG = True
	TEMPLATE_DEBUG = True
	ALLOWED_HOSTS = []
	HOST = "http://pollux.dashtest.com:8003/"
else:
	DEBUG = False
	TEMPLATE_DEBUG = False
	ALLOWED_HOSTS = ['dashboard.dash.com']
	HOST = "https://dashboard.dash.com"
	SESSION_COOKIE_SECURE = True
	CRSF_COOKIE_SECURE = True
	SESSION_COOKIE_HTTPONLY = True


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
	'dashboard',
	'ckeditor',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'dash.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
CKEDITOR_JQUERY_URL = '//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js'
CKEDITOR_IMAGE_BACKEND = 'pillow'
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',
        'height': 500,
        'width': '100%',
    },
}
CKEDITOR_BROWSE_SHOW_DIRS = True
CKEDITOR_UPLOAD_PATH = "uploads/"
LOGIN_URL = '/login/'
WSGI_APPLICATION = 'dash.wsgi.application'

LOGFILE = '%s/logs/logfile' % (BASE_DIR)

EMAIL_HOST = 'smtp.dash.com'
EMAIL_PORT = 25
SERVER_EMAIL = 'no-reply@dash.com'

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'Dash',
        'USER': 'django',
        'PASSWORD': DB_PASSWORD,
        'HOST': 'localhost',
        'PORT': '',
    }
}

APP_USER = 'dashboard'
APP_PASS = 'password'

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

TEMPLATE_DIRS = (
    BASE_DIR+"/templates",
)
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

MAIL_NOTIFYEES = ['jason.kirby@dash.com',]
STATIC_URL = '/static/'
STATIC_ROOT = '%s/static/' % (BASE_DIR)

MEDIA_ROOT = '%s/static/' % (BASE_DIR)
MEDIA_URL = '/media/'

AUTH_LDAP_BIND_DN = 'CN=testuser,DC=dash,DC=com'
AUTH_LDAP_BIND_PASSWORD = LDAP_KEY
AUTH_LDAP_SERVER_URI = "LDAPS://ldap.dash.com:636"
AUTH_LDAP_USER_SEARCH = LDAPSearch("ou=community,dc=dash,dc=com",ldap.SCOPE_SUBTREE, "(sAMAccountName=%(user)s)")
AUTH_LDAP_GROUP_SEARCH = LDAPSearch("ou=groups,ou=Teamwork,ou=community,dc=dash,dc=com", ldap.SCOPE_SUBTREE, "(objectClass=organizationalUnit)")
AUTH_LDAP_GROUP_TYPE = GroupOfNamesType(name_attr="cn")

AUTH_LDAP_USER_FLAGS_BY_GROUP = {
    "is_active": ["cn=members,ou=groups,ou=Teamwork,ou=community,dc=dash,dc=com",
                "cn=vendors,ou=groups,ou=Teamwork,ou=community,dc=dash,dc=com",
                "cn=employees,ou=groups,ou=Teamwork,ou=community,dc=dash,dc=com"],
    "is_staff": "cn=cc-admins,ou=groups,ou=Teamwork,ou=community,dc=dash,dc=com",
    "is_superuser": "cn=cc-admins,ou=groups,ou=Teamwork,ou=community,dc=dash,dc=com",
    "is_vendor": "cn=cl-vendors,ou=groups,ou=Teamwork,ou=community,dc=dash,dc=com",
    "is_member": "cn=cl-members,ou=groups,ou=Teamwork,ou=community,dc=dash,dc=com",
}

CROWD_BASE_URL = 'http://tstauth.dashtest.com:8095/crowd/rest/'
CROWD_AUTH_GROUPS = [
	'employees',
	'members',
	'vendors',
]

AUTH_LDAP_CONNECTION_OPTIONS = {
    ldap.OPT_REFERRALS: 0
}

AUTHENTICATION_BACKENDS = (    
	'dashboard.backends.KirbyCrowd',
	'django_auth_ldap.backend.LDAPBackend',
    'django.contrib.auth.backends.ModelBackend',
)
AUTH_LDAP_CACHE_GROUPS = True
AUTH_LDAP_GROUP_CACHE_TIMEOUT = 3600

LOGIN_REDIRECT_URL = '/'

USER_PHOTO_LOCATION = '/var/www/dash/static/user_photos/'

import logging

logger = logging.getLogger('django_auth_ldap')
logger.addHandler(logging.StreamHandler())
logger.setLevel(logging.DEBUG)